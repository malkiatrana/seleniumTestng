package APITesting;

import static io.restassured.RestAssured.given;
import static org.testng.Assert.assertTrue;

import org.apache.log4j.Logger;
import org.hamcrest.Matchers;
import org.testng.Assert;
import org.testng.annotations.Test;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;
import io.restassured.specification.RequestSpecification;
import utility.ConfigReader;

public class APITesting{
	ConfigReader config;
	
	@Test()
	public void Test_Amount_Transfer() {
		config = new ConfigReader();
		RestAssured.given().queryParam("fromAccountId", config.getSavingsAccountNumber()).queryParam("toAccountId", config.getCheckingAccountNumber()).queryParam("amount", "2")
	.accept(ContentType.JSON).
	post("https://parabank.parasoft.com/parabank/services/bank/transfer").
	then().
	statusCode(200).
	log().all().assertThat().body(Matchers.equalTo("Successfully transferred $2 from account #"+config.getSavingsAccountNumber()+" to account #"+config.getCheckingAccountNumber()));
	}

    @Test
	public void Get_AccountAmountBalance()
    {
    	RestAssured.baseURI = "https://parabank.parasoft.com/parabank/services/bank/accounts/"+config.getSavingsAccountNumber()/transactions";
    	RequestSpecification httpRequest = RestAssured.given();
    	Response response = httpRequest.get("/Credit");

    	// First get the JsonPath object instance from the Response interface
    	JsonPath jsonPathEvaluator = response.jsonPath();

    	// Then simply query the JsonPath object to get a String value of the node
    	// specified by JsonPath: City (Note: You should not put $. in the Java code)
    	String city = jsonPathEvaluator.get("amount");

    	// Let us print the city variable to see what we got
    	System.out.println("City received from Response " + city);

    	// Validate the response
    	Assert.assertEquals(city, "2.00", "Correct city name received in the Response");
}}
